buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.1"
	}
}

apply plugin: 'com.palantir.docker'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'br.com.psergiopoli'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

docker {
    dependsOn build
    dockerfile file('docker/Dockerfile')
    files bootJar.archivePath, 'docker/app-entrypoint.sh', 'docker/wait-for-it.sh'
    name "${project.group}/${bootJar.baseName}:${version}"
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-web')

    compile 'com.graphql-java:graphql-spring-boot-starter:5.0.2'
    compile 'com.graphql-java:graphiql-spring-boot-starter:5.0.2'
    compile 'com.graphql-java:voyager-spring-boot-starter:5.0.2'
	compile group: 'com.graphql-java', name: 'graphql-java-tools', version: '5.2.3'

	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}
